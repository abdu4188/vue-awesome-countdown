{"version":3,"sources":["webpack://vue-awesome-countdown/webpack/bootstrap","webpack://vue-awesome-countdown/./node_modules/_@soda_get-current-script@1.0.2@@soda/get-current-script/index.js","webpack://vue-awesome-countdown/./node_modules/_@vue_cli-service@4.4.6@@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-awesome-countdown/./src/vue-awesome-countdown.vue?64b0","webpack://vue-awesome-countdown/src/vue-awesome-countdown.vue","webpack://vue-awesome-countdown/./src/vue-awesome-countdown.vue?04da","webpack://vue-awesome-countdown/./node_modules/_vue-loader@15.9.3@vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-awesome-countdown/./src/vue-awesome-countdown.vue","webpack://vue-awesome-countdown/./src/vue-awesome-countdown.js","webpack://vue-awesome-countdown/./node_modules/_@vue_cli-service@4.4.6@@vue/cli-service/lib/commands/build/entry-lib.js"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACvB,GAAG,MAAM,EAIN;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA,+DAA+D,qBAAqB;AACpF;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC9ED;;AAEA;AACA;AACA,MAAM,IAAuC;AAC7C,2BAA2B,mBAAO,CAAC,MAA0B;AAC7D;;AAEA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA;;AAEA;AACA;AACA,IAAI,qBAAuB;AAC3B;AACA;;AAEA;AACe,sDAAI;;;ACrBnB,0BAA0B,aAAa,0BAA0B,wBAAwB,iCAAiC,iBAAiB;AAC3I;;;;;;;;;;;;;;;;;ACUe;AACftO8N,CAAgB,mIAAG,EAAC,C;;ACAnP;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;ACjGoG;AAC3B;AACL;;;AAGpE;AAC0G;AAC1G,gBAAgB,kBAAU;AAC1B,EAAE,iDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,2E;;AClB8C;;AAE7D;AACA;AACA;AACA,wBAAwB,qBAAmB;AAC3C,+BAA+B,qBAAmB;AAClD;AACA;;AAEA;AACA;AACA;;AAEe,iE;;ACdS;AACA;AACT,wGAAG;AACI","file":"vue-awesome-countdown.common.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"9896\");\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tag,_vm._g(_vm._b({tag:\"components\"},'components',_vm.attrs,false),_vm.$listeners),[_vm._t(\"prev\",null,null,this._self),(_vm.state === 'beforeStart')?_vm._t(\"before\",null,null,this._self):_vm._e(),(_vm.state === 'preheat')?_vm._t(\"preheat\",null,null,this._self):_vm._e(),(_vm.state === 'process' || _vm.state === 'stopped' || _vm.state === 'paused')?_vm._t(\"process\",null,null,this._self):_vm._e(),(_vm.state === 'finished')?_vm._t(\"finish\",null,null,this._self):_vm._e(),_vm._t(\"default\",null,null,this._self)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <components :is=\"tag\" v-bind=\"attrs\" v-on=\"$listeners\">\n    <slot v-bind=\"this._self\" name=\"prev\" />\n    <slot v-if=\"state === 'beforeStart'\" v-bind=\"this._self\" name=\"before\" />\n    <slot v-if=\"state === 'preheat'\" v-bind=\"this._self\" name=\"preheat\" />\n    <slot v-if=\"state === 'process' || state === 'stopped' || state === 'paused'\" v-bind=\"this._self\" name=\"process\" />\n    <slot v-if=\"state === 'finished'\" v-bind=\"this._self\" name=\"finish\" />\n    <slot v-bind=\"this._self\" name=\"default\" />\n  </components>\n</template>\n<script>\nexport default {\n  name: 'vue-awesome-countdown',\n  props: {\n    startTime: {\n      type: [String, Number, Date],\n      default: null,\n      validator: function(value) {\n        return new Date(value).toString() !== 'Invalid Date'\n      }\n    },\n    endTime: {\n      type: [String, Number, Date],\n      default: null,\n      validator: function(value) {\n        return new Date(value).toString() !== 'Invalid Date'\n      }\n    },\n    leftTime: {\n      type: Number,\n      default: 0\n    },\n    autoStart: {\n      type: Boolean,\n      default: true\n    },\n    speed: {\n      type: Number,\n      default: 1000,\n      validator: function(value) {\n        return value >= 0\n      }\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  computed: {\n    thousandSpeed() {\n      return this.speed > 0 && this.speed % 1000 === 0\n    }\n  },\n  data: function() {\n    return {\n      state: 'beforeStart', //beforeStart, stopped, process, finished\n      attrs: {},\n      actualStartTime: null,\n      actualEndTime: null,\n      timeObj: {},\n      countdownTimer: null,\n      runTimes: 0,\n      usedTime: 0,\n      remainingTime: 0\n    }\n  },\n  watch: {\n    speed(curSpeed, oldSpeed) {\n      const vm = this\n      if (curSpeed < 0) {\n        curSpeed = 0\n      }\n      if (curSpeed !== oldSpeed) {\n        clearTimeout(vm.countdownTimer)\n        const now = new Date().getTime()\n        const runTimes = Math.floor((now - vm.actualStartTime) / curSpeed)\n        const nextTime = now % curSpeed\n        vm.runTimes = runTimes\n        vm.$nextTick(() => {\n          vm.countdownTimer = setTimeout(vm.doCountdown, nextTime)\n        })\n      }\n    }\n  },\n  created() {\n    const vm = this\n    const startTime = (vm.startTime && new Date(vm.startTime).getTime()) || 0\n    const firstTime = (startTime && startTime - new Date().getTime()) || 0\n    if (vm.autoStart) {\n      vm.state = 'preheat'\n      setTimeout(() => {\n        vm.startCountdown(true)\n      }, firstTime)\n    }\n  },\n  methods: {\n    startCountdown(restart) {\n      const vm = this\n      if (vm.state !== 'beforeStart' && vm.state !== 'stopped' && vm.state !== 'paused' && !restart) {\n        return\n      }\n      if (restart) {\n        Object.assign(vm.$data, vm.$options.data.call(vm))\n      }\n      if (vm.state === 'stopped') {\n        vm.remainingTime = vm.actualEndTime - new Date().getTime()\n      }\n      if (!vm.actualEndTime) {\n        vm.actualEndTime = vm.endTime || (new Date().getTime() + (vm.remainingTime || vm.leftTime))\n      }\n      if (vm.state === 'paused') {\n        vm.actualEndTime = new Date().getTime() + vm.remainingTime\n      }\n      vm.$emit('start', vm)\n      vm.state = 'process'\n      vm.doCountdown()\n    },\n    stopCountdown() {\n      const vm = this\n      if (vm.state !== 'process') {\n        return\n      }\n      clearTimeout(vm.countdownTimer)\n      vm.$emit('stop', vm)\n      vm.state = 'stopped'\n    },\n    pauseCountdown() {\n      const vm = this\n      if (vm.state !== 'process') {\n        return\n      }\n      clearTimeout(vm.countdownTimer)\n      vm.remainingTime = vm.actualEndTime - new Date().getTime()\n      vm.$emit('paused', vm)\n      vm.state = 'paused'\n    },\n    switchCountdown() {\n      const vm = this\n      if (vm.state === 'stopped' || vm.state === 'beforeStart') {\n        return vm.startCountdown()\n      }\n      if (vm.state === 'process') {\n        return vm.stopCountdown()\n      }\n    },\n    finishCountdown() {\n      const vm = this\n      vm.state = 'finished'\n      vm.timeObj = {}\n      vm.usedTime = new Date().getTime() - vm.actualStartTime\n      vm.$emit('finish', vm)\n    },\n    doCountdown() {\n      const vm = this\n      if (vm.state !== 'process') {\n        return\n      }\n      if (!vm.actualStartTime) {\n        vm.actualStartTime = new Date().getTime()\n      }\n      let leftTime = new Date(vm.actualEndTime).getTime() - new Date().getTime()\n      if (leftTime > 0) {\n        const t = {}\n        let leftSeconds = leftTime / 1000\n\n        let ms = leftTime % 1000\n\n        if (vm.thousandSpeed && ms > 990) {\n          leftSeconds = Math.ceil(leftSeconds)\n          ms = 0\n        }\n\n        const org = {\n          d: leftSeconds / 60 / 60 / 24,\n          h: (leftSeconds / 60 / 60) % 24,\n          m: (leftSeconds / 60) % 60,\n          s: leftSeconds % 60,\n          ms: ms\n        }\n\n        const txt = {\n          d: parseInt(org.d, 10).toString(),\n          h: parseInt(org.h, 10)\n            .toString()\n            .padStart(2, 0),\n          m: parseInt(org.m, 10)\n            .toString()\n            .padStart(2, 0),\n          s: parseInt(org.s, 10)\n            .toString()\n            .padStart(2, 0),\n          ms: org.ms.toString().padStart(3, 0)\n        }\n\n        const ceil = {\n          d: parseInt(Math.ceil(leftSeconds / 60 / 60 / 24), 10),\n          h: parseInt(Math.ceil(leftSeconds / 60 / 60), 10),\n          m: parseInt(Math.ceil(leftSeconds / 60), 10),\n          s: parseInt(Math.ceil(leftSeconds), 10)\n        }\n\n        t.endTime = vm.actualEndTime\n        t.speed = vm.speed\n        vm.usedTime = new Date().getTime() - vm.actualStartTime\n        t.leftTime = leftTime\n        vm.remainingTime = leftTime\n        vm.timeObj = Object.assign({}, t, txt, {\n          org,\n          ceil\n        })\n        vm.timeObj.org = org\n        vm.timeObj.ceil = ceil\n        vm.$emit('process', vm)\n      } else {\n        vm.finishCountdown()\n        return\n      }\n\n      let nextSpeed =\n        vm.speed +\n        (vm.actualStartTime + vm.runTimes++ * vm.speed - new Date().getTime())\n      if (nextSpeed < 0) {\n        nextSpeed = nextSpeed + vm.speed\n      }\n      if (leftTime < vm.speed) {\n        nextSpeed = leftTime\n      }\n      vm.countdownTimer = setTimeout(vm.doCountdown, nextSpeed)\n    }\n  }\n}\n</script>","import mod from \"-!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./vue-awesome-countdown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./vue-awesome-countdown.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./vue-awesome-countdown.vue?vue&type=template&id=f6ff4b48&\"\nimport script from \"./vue-awesome-countdown.vue?vue&type=script&lang=js&\"\nexport * from \"./vue-awesome-countdown.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/_vue-loader@15.9.3@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import vueAwesomeCountdown from './vue-awesome-countdown.vue'\n\nconst vac = {\n  install: function (Vue, options) {\n    const name = options || 'vac'\n    Vue.component(name, vueAwesomeCountdown)\n    Vue.component('countdown', vueAwesomeCountdown)\n  }\n}\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  window.Vue.use(vac)\n}\n\nexport default vac","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}